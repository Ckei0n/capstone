name: CI Pipeline

on:
  push:
    branches: [ main, develop, K-On ]
  pull_request:
    branches: [ main, develop, K-On]

permissions:
  contents: read 
  actions: read  

jobs:
  # Frontend Build and Test
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./reactviewer
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: reactviewer/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint
      continue-on-error: true

    - name: Run tests
      run: npm test

    - name: Build application
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: react-build
        path: reactviewer/dist/

  # Backend Build and Test
  backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      checks: write
      pull-requests: write
    defaults:
      run:
        working-directory: ./stone

    services:
      opensearch:
        image: opensearchproject/opensearch:3
        env:
          discovery.type: single-node
          DISABLE_SECURITY_PLUGIN: "true"
          OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx512m"
        ports:
          - 9200:9200
        options: >-
          --health-cmd "curl -s http://localhost:9200/_cluster/health"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Wait for OpenSearch
      run: |
        echo "Waiting for OpenSearch..."
        timeout 300 bash -c 'until curl -s http://localhost:9200/_cluster/health | grep -q "green\|yellow"; do sleep 10; done'
        echo "OpenSearch is ready!"

    - name: Run unit tests
      run: ./mvnw test
          
    - name: Build application
      run: ./mvnw clean package -DskipTests
      
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      if: success() 
      with:
        name: spring-boot-jar
        path: stone/target/*.jar

  # Security and Code Quality
  security:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'